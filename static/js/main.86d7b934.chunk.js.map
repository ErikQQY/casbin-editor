{"version":3,"sources":["editor/persist.ts","editor/casbin-mode/example.ts","editor/select-model.tsx","editor/casbin-mode/casbin-conf.ts","editor/casbin-mode/casbin-csv.ts","editor/editor.tsx","editor/syntax.tsx","editor/index.tsx","index.tsx","ui.tsx","editor/run-test.tsx"],"names":["Persist","example","basic","name","model","policy","request","customConfig","undefined","basic_with_root","basic_without_resources","basic_without_users","rbac","rbac_with_resource_roles","rbac_with_domains","rbac_with_pattern","rbac_with_all_pattern","rbac_with_deny","abac","abac_with_policy_rule","keymatch","keymatch2","ipmatch","priority","getKey","persist","modelName","toUpperCase","getSelectedModel","v","window","localStorage","getItem","MODEL","toString","get","data","m","POLICY","REQUEST","CUSTOM_FUNCTION","SelectModel","props","defaultValue","onChange","e","value","target","setItem","disabled","Object","keys","map","n","key","defaultProps","console","log","CodeMirror","defineMode","tokenBase","stream","state","ch","peek","match","sec","skipTo","eat","skipToEnd","after_equal","sol","RegExp","next","comma","dot","startState","tokenize","token","CasbinCodeMirror","useState","modelKind","setValue","useEffect","modelText","style","onBeforeChange","editor","text","set","options","CustomFunctionEditor","lineNumbers","indentUnit","styleActiveLine","matchBrackets","mode","lineWrapping","theme","ModelEditor","PolicyEditor","RequestEditor","RequestResultEditor","readOnly","Syntax","marginRight","onClick","Config","newConfigFromText","onResponse","type","message","EditorScreen","setModelKind","setModelText","setPolicy","setCustomConfig","setRequest","echo","setEcho","requestResult","setRequestResult","customConfigVisible","setCustomConfigVisible","setTimeout","confirm","hasOwnProperty","index","parseInt","removeItem","reset","location","reload","marginLeft","padding","component","isValidElement","Array","isArray","join","display","App","rel","href","alt","src","color","float","fontSize","Date","getFullYear","rootElement","document","getElementById","ReactDOM","render","Button","styled","button","HeaderTitle","h4","FlexRow","div","EditorContainer","Echo","span","Footer","needsAbacParsing","Set","parseABACRequest","line","objectToken","parseToObject","i","length","eval","push","Error","enforcer","a","startTime","performance","now","result","newEnforcer","newModel","StringAdapter","customConfigCode","builtinFunc","keyMatch","Util","keyMatchFunc","keyMatch2","keyMatch2Func","keyMatch3","keyMatch3Func","keyMatch4","keyMatch4Func","regexMatch","regexMatchFunc","ipMatch","ipMatchFunc","globMatch","config","functions","forEach","addFunction","rm","getRoleManager","matchingForGFunction","addMatchingFunc","warn","matchingDomainForGFunction","addDomainMatchingFunc","requests","split","trim","rvals","has","enforce","stopTime","toFixed","RunTest"],"mappings":"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","file":"static/js/main.86d7b934.chunk.js","sourcesContent":["import { defaultCustomConfig, example, ModelKind } from './casbin-mode/example';\n\nexport const DEFAULT_MODEL: ModelKind = 'basic';\n\nexport enum Persist {\n  MODEL,\n  POLICY,\n  REQUEST,\n  CUSTOM_FUNCTION\n}\n\nfunction getKey(persist: Persist, modelName: string) {\n  return `${modelName.toUpperCase()}_${Persist[persist]}`;\n}\n\nexport function getSelectedModel(): ModelKind {\n  const v = window.localStorage.getItem(Persist[Persist.MODEL].toString());\n  return (v ? v : DEFAULT_MODEL) as ModelKind;\n}\n\nexport function setSelectedModel(value: string) {\n  window.localStorage.setItem(Persist[Persist.MODEL], value);\n}\n\nexport function get(persist: Persist, modelName: ModelKind = DEFAULT_MODEL) {\n  const data = window.localStorage.getItem(getKey(persist, modelName));\n\n  if (data) {\n    return data;\n  }\n\n  const m = example[modelName];\n  switch (persist) {\n    case Persist.MODEL:\n      return m.model;\n    case Persist.POLICY:\n      return m.policy;\n    case Persist.REQUEST:\n      return m.request;\n    case Persist.CUSTOM_FUNCTION:\n      return m.customConfig || defaultCustomConfig;\n  }\n}\n\nexport function set(persist: Persist, text: string) {\n  const modelName = getSelectedModel() || DEFAULT_MODEL;\n  window.localStorage.setItem(getKey(persist, modelName), text);\n}\n\nexport function reset(modelName: string) {\n  for (const m in Persist) {\n    if (!Persist.hasOwnProperty(m)) {\n      continue;\n    }\n    const index = parseInt(m, 10);\n    window.localStorage.removeItem(getKey(index, modelName));\n  }\n}\n","export const example = {\n  basic: {\n    name: 'ACL',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_with_root: {\n    name: 'ACL with superuser',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act || r.sub == \"root\"`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_without_resources: {\n    name: 'ACL without resources',\n    model: `[request_definition]\nr = sub, act\n\n[policy_definition]\np = sub, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.act == p.act`,\n    policy: `p, alice, read\np, bob, write`,\n    request: `alice, read`,\n    customConfig: undefined\n  },\n  basic_without_users: {\n    name: 'ACL without users',\n    model: `[request_definition]\nr = obj, act\n\n[policy_definition]\np = obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.obj == p.obj && r.act == p.act`,\n    policy: `p, data1, read\np, data2, write`,\n    request: `data1, read`,\n    customConfig: undefined\n  },\n  rbac: {\n    name: 'RBAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\n\ng, alice, data2_admin`,\n    request: `alice, data2, read`,\n    customConfig: undefined\n  },\n  rbac_with_resource_roles: {\n    name: 'RBAC with resource roles',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\ng2 = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && g2(r.obj, p.obj) && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data_group_admin, data_group, write\n\ng, alice, data_group_admin\ng2, data1, data_group\ng2, data2, data_group`,\n    request: `alice, data1, read\nalice, data1, write\nalice, data2, read\nalice, data2, write `,\n\n    customConfig: undefined\n  },\n  rbac_with_domains: {\n    name: 'RBAC with domains/tenants',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act`,\n    policy: `p, admin, domain1, data1, read\np, admin, domain1, data1, write\np, admin, domain2, data2, read\np, admin, domain2, data2, write\n\ng, alice, admin, domain1\ng, bob, admin, domain2`,\n    request: `alice, domain1, data1, read`,\n    customConfig: undefined\n  },\n  rbac_with_pattern: {\n    name: 'RBAC with pattern',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && regexMatch(r.act, p.act)`,\n    policy: `\np, pen_admin, data1, GET\n\ng, /book/:id, book_admin\n`,\n    request: `/book/1, data1, GET`,\n    customConfig: `\n(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: undefined\n  };\n})();`\n  },\n  rbac_with_all_pattern: {\n    name: 'RBAC with all pattern',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj &&  r.act == p.act`,\n    policy: `p, book_group, domain1, data1, read\np, book_group, domain2, data2, write\n\ng, /book/:id, book_group, *`,\n    request: `/book/1, domain1, data1, read\n/book/1, domain2, data2, write\n`,\n    customConfig: `\n(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: 'keyMatch2'\n  };\n})();`\n  },\n  rbac_with_deny: {\n    name: 'RBAC with deny-override',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, bob, data2, write, allow\np, data2_admin, data2, read, allow\np, data2_admin, data2, write, allow\np, alice, data2, write, deny\n\ng, alice, data2_admin`,\n    request: `alice, data1, read\nalice, data2, write`,\n    customConfig: undefined\n  },\n  abac: {\n    name: 'ABAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == r.obj.Owner`,\n    policy: '',\n    request: `alice, { Owner: 'alice'}\nalice, { Owner: 'bob'}`,\n    customConfig: undefined\n  },\n  abac_with_policy_rule: {\n    name: 'ABAC with policy rule',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub_rule, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = eval(p.sub_rule) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, r.sub.Age > 18 && r.sub.Age < 60, /data1, read\n`,\n    request: `{ Age: 30}, /data1, read`,\n    customConfig: undefined\n  },\n  keymatch: {\n    name: 'RESTful (KeyMatch)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/*, GET\np, alice, /alice_data/resource1, POST\n\np, bob, /alice_data/resource2, GET\np, bob, /bob_data/*, POST\n\np, cathy, /cathy_data, (GET)|(POST)`,\n    request: 'alice, /alice_data/hello, GET',\n    customConfig: undefined\n  },\n  keymatch2: {\n    name: 'RESTful (KeyMatch2)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch2(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/:resource, GET\np, alice, /alice_data2/:id/using/:resId, GET`,\n    request: `alice, /alice_data/hello, GET\nalice, /alice_data/hello, POST`,\n    customConfig: undefined\n  },\n  ipmatch: {\n    name: 'IP match',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = ipMatch(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, 192.168.2.0/24, data1, read\np, 10.0.0.0/16, data2, write`,\n    request: `192.168.2.1, data1, read\n10.0.2.3, data2, write`,\n    customConfig: undefined\n  },\n  priority: {\n    name: 'Priority',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, data1_deny_group, data1, read, deny\np, data1_deny_group, data1, write, deny\np, alice, data1, write, allow\n\ng, alice, data1_deny_group\n\np, data2_allow_group, data2, read, allow\np, bob, data2, read, deny\np, bob, data2, write, deny\n\ng, bob, data2_allow_group`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  }\n};\n\nexport const defaultCustomConfig = `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: undefined,\n    matchingDomainForGFunction: undefined\n  };\n})();`\nexport type Example = typeof example;\nexport type ModelKind = keyof Example;\n","import React from 'react';\nimport { getSelectedModel, setSelectedModel } from './persist';\nimport { ModelKind, example } from './casbin-mode/example';\n\ninterface SelectModelProps {\n  onChange: (value: string) => void;\n}\n\nconst SelectModel = (props: SelectModelProps) => {\n  return (\n    <select\n      defaultValue={getSelectedModel()}\n      onChange={e => {\n        const model = e.target.value;\n        setSelectedModel(model);\n        props.onChange(model);\n      }}\n    >\n      <option value=\"\" disabled>\n        Select your model\n      </option>\n      {Object.keys(example).map(n => (\n        <option key={n} value={n}>\n          {example[n as ModelKind].name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelectModel.defaultProps = {\n  onChange: console.log,\n  defaultValue: 'basic'\n};\nexport default SelectModel;\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-conf', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n    if (ch === '[') {\n      if (stream.match('[request_definition')) {\n        state.sec = 'r';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_definition')) {\n        state.sec = 'p';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[role_definition')) {\n        state.sec = 'g';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_effect')) {\n        state.sec = 'e';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[matchers')) {\n        state.sec = 'm';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else {\n        state.sec = '';\n        stream.skipToEnd();\n        return '';\n      }\n    } else if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === '\"') {\n      stream.skipToEnd();\n      stream.skipTo('\"');\n      stream.eat('\"');\n      return 'string';\n    } else if (ch === '=') {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = true;\n      stream.eat('=');\n    }\n\n    if (stream.sol()) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = false;\n    }\n\n    if (state.sec === '') {\n      stream.skipToEnd();\n      return '';\n    }\n\n    if (stream.sol()) {\n      if (state.sec !== '') {\n        if ((state.sec === 'g' && stream.match(new RegExp('^g[2-9]?'))) || stream.match(state.sec)) {\n          if (stream.peek() === ' ' || stream.peek() === '=') {\n            return 'builtin';\n          } else {\n            state.sec = '';\n            stream.next();\n            return;\n          }\n        } else {\n          state.sec = '';\n          stream.next();\n          return;\n        }\n      } else {\n        stream.next();\n        return;\n      }\n    }\n\n    if (!state.after_equal) {\n      stream.next();\n      return;\n    }\n\n    if (state.sec === 'r' || state.sec === 'p') {\n      // Match: r = [sub], [obj], [act]\n      //        p = [sub], [obj], [act]\n      if (state.comma) {\n        state.comma = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat(',') || stream.eat(' ')) {\n        state.comma = true;\n        return '';\n      }\n    } else if (state.sec === 'e') {\n      // Match: e = some(where (p.[eft] == allow))\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: e = some(where ([p].eft == allow))\n      if (stream.match('p') && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: e = [some]([where] (p.eft == allow))\n      if (stream.match('some') || stream.match('where') || stream.match('priority')) {\n        return 'keyword';\n      }\n\n      // Match: e = some(where (p.eft == [allow]))\n      if (stream.match('allow') || stream.match('deny')) {\n        return 'string';\n      }\n    } else if (state.sec === 'm') {\n      // Match: m = r.[sub] == p.[sub] && r.[obj] == p.[obj] && r.[act] == p.[act]\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: m = [r].sub == [p].sub && [r].obj == [p].obj && [r].act == [p].act\n      if ((stream.match('r') || stream.match('p')) && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: m = [g](r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n      if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*')) && stream.peek() === '(') {\n        return 'def';\n      }\n    }\n\n    stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-csv', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === ',') {\n      stream.eat(',');\n      return '';\n    }\n\n    if (stream.sol() && stream.match('p')) {\n      return 'def';\n    }\n    if (stream.sol() && (stream.match('g2') || stream.match('g'))) {\n      return 'keyword';\n    }\n\n    if (stream.skipTo(',')) {\n      return 'string';\n    }\n\n    stream.skipToEnd();\n    return 'property';\n\n    // stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","import React, { CSSProperties, useEffect, useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { get, Persist, set } from './persist';\n\nimport * as codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/selection/active-line';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/display/placeholder';\nimport './casbin-mode/casbin-conf';\nimport './casbin-mode/casbin-csv';\nimport { ModelKind } from './casbin-mode/example';\n\ninterface CasbinCodeMirror {\n  modelKind: ModelKind;\n  options: codemirror.EditorConfiguration;\n  style?: CSSProperties;\n  onChange: (text: string) => void;\n  persist: Persist;\n}\n\ninterface EditorProps {\n  modelKind: ModelKind;\n  onChange?: (text: string) => void;\n  style?: CSSProperties;\n}\n\nconst CasbinCodeMirror = (props: CasbinCodeMirror) => {\n  const [value, setValue] = useState(get(props.persist, props.modelKind));\n\n  const { modelKind, onChange, persist } = props;\n\n  useEffect(() => {\n    const modelText = get(persist, modelKind);\n    setValue(modelText);\n    onChange(modelText);\n  }, [modelKind, persist, onChange]);\n\n  return (\n    <div style={props.style}>\n      <CodeMirror\n        onBeforeChange={(editor, data, value) => {\n          setValue(value);\n          props.onChange(value);\n          set(props.persist, value);\n        }}\n        options={props.options}\n        value={value}\n      />\n    </div>\n  );\n};\n\nCasbinCodeMirror.defaultProps = {\n  onChange: () => {}\n};\n\nexport const CustomFunctionEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.CUSTOM_FUNCTION}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'javascript',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const ModelEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.MODEL}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-conf',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const PolicyEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.POLICY}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-csv',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const RequestEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.REQUEST}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-csv',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\ninterface RequestResultEditorProps {\n  value: string;\n  style?: CSSProperties;\n}\n\nexport const RequestResultEditor = (props: RequestResultEditorProps) => {\n  return (\n    <div style={props.style}>\n      <CodeMirror\n        onBeforeChange={() => {\n          return;\n        }}\n        value={props.value}\n        options={{\n          readOnly: true,\n          indentUnit: 4,\n          styleActiveLine: true,\n          matchBrackets: true,\n          mode: 'javascript',\n          lineWrapping: true,\n          theme: 'monokai'\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { Config } from 'casbin';\n\ninterface SyntaxProps {\n  model: string;\n  onResponse: (com: JSX.Element) => void;\n}\n\nconst Syntax = (props: SyntaxProps) => {\n  return (\n    <Button\n      style={{ marginRight: 8 }}\n      onClick={() => {\n        try {\n          Config.newConfigFromText(props.model);\n          props.onResponse(<Echo>Passed</Echo>);\n        } catch (e) {\n          props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n        }\n      }}\n    >\n      SYNTAX VALIDATE\n    </Button>\n  );\n};\n\nexport default Syntax;\n","import React, { isValidElement, useEffect, useState } from 'react';\nimport SelectModel from './select-model';\nimport { Button, EditorContainer, FlexRow, HeaderTitle } from '../ui';\nimport { getSelectedModel, reset } from './persist';\nimport { CustomFunctionEditor, ModelEditor, PolicyEditor, RequestEditor, RequestResultEditor } from './editor';\nimport Syntax from './syntax';\nimport RunTest from './run-test';\nimport { ModelKind } from './casbin-mode/example';\n\nexport const EditorScreen = () => {\n  const [modelKind, setModelKind] = useState<ModelKind>(getSelectedModel());\n  const [modelText, setModelText] = useState('');\n  const [policy, setPolicy] = useState('');\n  const [customConfig, setCustomConfig] = useState('');\n  const [request, setRequest] = useState('');\n  const [echo, setEcho] = useState<JSX.Element>(<></>);\n  const [requestResult, setRequestResult] = useState('');\n  const [customConfigVisible, setCustomConfigVisible] = useState(true);\n\n  useEffect(() => {\n    // Automatically hide the custom config container.\n    setTimeout(() => {\n      setCustomConfigVisible(false);\n    }, 2000);\n  }, []);\n  return (\n    <>\n      <FlexRow>\n        <EditorContainer>\n          <FlexRow>\n            <HeaderTitle>Model</HeaderTitle>\n            <SelectModel\n              onChange={value => {\n                setModelKind(value as ModelKind);\n              }}\n            />\n            <Button\n              onClick={() => {\n                const ok = window.confirm('Confirm Reset?');\n                if (ok) {\n                  reset(modelKind);\n                  window.location.reload();\n                }\n              }}\n              style={{ marginLeft: 8 }}\n            >\n              Reset\n            </Button>\n          </FlexRow>\n          <ModelEditor modelKind={modelKind} onChange={setModelText} />\n        </EditorContainer>\n        <EditorContainer>\n          <HeaderTitle>Policy</HeaderTitle>\n          <PolicyEditor modelKind={modelKind} onChange={setPolicy} />\n        </EditorContainer>\n      </FlexRow>\n\n      <FlexRow>\n        <EditorContainer>\n          <HeaderTitle>Request</HeaderTitle>\n          <RequestEditor modelKind={modelKind} onChange={setRequest} />\n        </EditorContainer>\n        <EditorContainer>\n          <HeaderTitle>Enforcement Result</HeaderTitle>\n          <RequestResultEditor value={requestResult} />\n        </EditorContainer>\n      </FlexRow>\n\n      <FlexRow>\n        <EditorContainer>\n          <FlexRow>\n            <HeaderTitle>Custom Config</HeaderTitle>\n            <Button onClick={() => setCustomConfigVisible(!customConfigVisible)}>TOGGLE</Button>\n          </FlexRow>\n          {customConfigVisible && <CustomFunctionEditor modelKind={modelKind} onChange={setCustomConfig} />}\n        </EditorContainer>\n      </FlexRow>\n\n      <div style={{ padding: 8 }}>\n        <Syntax model={modelText} onResponse={component => setEcho(component)} />\n        <RunTest\n          modelKind={modelKind}\n          model={modelText}\n          policy={policy}\n          customConfig={customConfig}\n          request={request}\n          onResponse={v => {\n            if (isValidElement(v)) {\n              setEcho(v);\n            } else if (Array.isArray(v)) {\n              setRequestResult(v.join('\\n'));\n            }\n          }}\n        />\n        <div style={{ display: 'inline-block' }}>{echo}</div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorScreen } from './editor';\nimport { Footer } from './ui';\nimport 'normalize.css/normalize.css';\n\nconst App = () => (\n  <>\n    <EditorScreen />\n\n    <Footer>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/casbin/casbin-editor\">\n        <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/casbin/casbin-editor?style=social\" />\n      </a>\n      <span style={{ color: '#FFFFFF', float: 'right', fontSize: 14 }}>Copyright © {new Date().getFullYear()} Casbin contributors.</span>\n    </Footer>\n  </>\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: 1px solid #443d80;\n  border-radius: 3px;\n  color: #443d80;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2em;\n  padding: 10px;\n  text-decoration: none !important;\n  text-transform: uppercase;\n  transition: background 0.3s, color 0.3s;\n\n  :hover {\n    background: #443d80;\n    color: #fff;\n  }\n`;\n\nexport const HeaderTitle = styled.h4`\n  padding: 8px;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const EditorContainer = styled.div`\n  flex: 1;\n`;\n\ninterface EchoProps {\n  type?: 'pass' | 'error';\n}\n\nconst error = '#db4545';\nconst pass = '#39aa56';\n\nexport const Echo = styled.span<EchoProps>`\n  color: ${(props: EchoProps) => {\n    switch (props.type) {\n      case 'error':\n        return error;\n      case 'pass':\n        return pass;\n    }\n  }};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nEcho.defaultProps = {\n  type: 'pass'\n};\n\nexport const Footer = styled.div`\n  padding: 1em;\n  background: #222;\n`;\n","import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { DefaultRoleManager, newEnforcer, newModel, StringAdapter, Util } from 'casbin';\n\ninterface RunTestProps {\n  model: string;\n  modelKind: string;\n  policy: string;\n  customConfig: string;\n  request: string;\n  onResponse: (com: JSX.Element | any[]) => void;\n}\n\nconst needsAbacParsing = new Set(['abac', 'abac_with_policy_rule']);\n\nfunction parseABACRequest(line: string): any[] {\n  let value = '';\n  let objectToken = 0;\n  let parseToObject = false;\n  const request = [];\n\n  for (let i = 0; i < line.length; i++) {\n    if (line[i] === ' ') {\n      continue;\n    }\n\n    if (objectToken === 0 && line[i] === ',') {\n      if (parseToObject) {\n        // eslint-disable-next-line\n        value = eval(`(${value})`);\n      }\n      request.push(value);\n\n      value = '';\n      parseToObject = false;\n      continue;\n    }\n\n    value += line[i];\n\n    if (line[i] === '{') {\n      parseToObject = true;\n      objectToken++;\n      continue;\n    }\n\n    if (line[i] === '}') {\n      objectToken--;\n    }\n  }\n\n  if (objectToken !== 0) {\n    throw new Error(`invalid request ${line}`);\n  }\n\n  if (value) {\n    if (parseToObject) {\n      // eslint-disable-next-line\n      value = eval(`(${value})`);\n    }\n    request.push(value);\n  }\n\n  return request;\n}\n\nasync function enforcer(props: RunTestProps) {\n  debugger;\n  const startTime = performance.now();\n  const result = [];\n  try {\n    const e = await newEnforcer(newModel(props.model), props.policy ? new StringAdapter(props.policy) : undefined);\n\n    const customConfigCode = props.customConfig;\n    if (customConfigCode) {\n      try {\n        const builtinFunc = {\n          keyMatch: Util.keyMatchFunc,\n          keyMatch2: Util.keyMatch2Func,\n          keyMatch3: Util.keyMatch3Func,\n          keyMatch4: Util.keyMatch4Func,\n          regexMatch: Util.regexMatchFunc,\n          ipMatch: Util.ipMatchFunc,\n          globMatch: Util.globMatch\n        };\n\n        // eslint-disable-next-line\n        let config = eval(customConfigCode);\n        if (config) {\n          config = { ...config, functions: { ...config.functions, ...builtinFunc } };\n          if (config?.functions) {\n            Object.keys(config.functions).forEach(key => e.addFunction(key, config.functions[key]));\n          }\n\n          const rm = e.getRoleManager() as DefaultRoleManager;\n          const matchingForGFunction = config.matchingForGFunction;\n          if (matchingForGFunction) {\n            if (typeof matchingForGFunction === 'function') {\n              await rm.addMatchingFunc(matchingForGFunction);\n            }\n            if (typeof matchingForGFunction === 'string') {\n              if (matchingForGFunction in config.functions) {\n                console.warn('add matchingForGFunction');\n                await rm.addMatchingFunc(config.functions[matchingForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n\n          const matchingDomainForGFunction = config.matchingDomainForGFunction;\n          if (matchingDomainForGFunction) {\n            if (typeof matchingDomainForGFunction === 'function') {\n              console.warn('add addDomainMatchingFunc');\n              await rm.addDomainMatchingFunc(matchingDomainForGFunction);\n            }\n            if (typeof matchingDomainForGFunction === 'string') {\n              if (matchingDomainForGFunction in config.functions) {\n                console.warn('add addDomainMatchingFunc');\n                await rm.addDomainMatchingFunc(config.functions[matchingDomainForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingDomainForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n        }\n      } catch (e) {\n        props.onResponse(<Echo type={'error'}>Please check syntax in Custom Function Editor: {e.message}</Echo>);\n        return;\n      }\n    }\n\n    const requests = props.request.split('\\n');\n\n    for (const n of requests) {\n      const line = n.trim();\n      if (!line) {\n        result.push('// ignore');\n        continue;\n      }\n\n      if (line[0] === '#') {\n        result.push('// ignore');\n        continue;\n      }\n\n      const rvals = needsAbacParsing.has(props.modelKind) ? parseABACRequest(n) : n.split(',').map(n => n.trim());\n      result.push(await e.enforce(...rvals));\n    }\n\n    const stopTime = performance.now();\n\n    props.onResponse(<Echo>{'Done in ' + ((stopTime - startTime) / 1000.0).toFixed(2) + 's'}</Echo>);\n    props.onResponse(result);\n  } catch (e) {\n    props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n    props.onResponse([]);\n  }\n}\n\nconst RunTest = (props: RunTestProps) => {\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => enforcer(props)}>\n      RUN THE TEST\n    </Button>\n  );\n};\n\nexport default RunTest;\n"],"sourceRoot":""}
{"version":3,"sources":["editor/run-test.tsx","editor/persist.ts","editor/casbin-mode/example.ts","editor/select-model.tsx","editor/casbin-mode/casbin-conf.ts","editor/casbin-mode/casbin-csv.ts","editor/editor.tsx","editor/syntax.tsx","editor/index.tsx","index.tsx","ui.tsx"],"names":["parseABACRequest","line","value","objectToken","parseToObject","request","i","length","eval","push","Error","enforcer","props","a","startTime","performance","now","result","newEnforcer","newModel","model","policy","StringAdapter","undefined","e","customConfigCode","customConfig","builtinFunc","keyMatch","Util","keyMatchFunc","keyMatch2","keyMatch2Func","keyMatch3","keyMatch3Func","keyMatch4","keyMatch4Func","regexMatch","regexMatchFunc","ipMatch","ipMatchFunc","globMatch","config","functions","Object","keys","forEach","key","addFunction","rm","getRoleManager","matchingForGFunction","addMatchingFunc","console","warn","onResponse","type","matchingDomainForGFunction","addDomainMatchingFunc","message","requests","split","n","trim","rvals","enforce","stopTime","toFixed","RunTest","style","marginRight","onClick","Persist","example","basic","name","basic_with_root","basic_without_resources","basic_without_users","rbac","rbac_with_resource_roles","rbac_with_domains","rbac_with_pattern","rbac_with_all_pattern","rbac_with_deny","abac","abac_with_policy_rule","keymatch","keymatch2","ipmatch","priority","defaultCustomConfig","getKey","persist","modelName","toUpperCase","getSelectedModel","v","window","localStorage","getItem","MODEL","toString","get","data","m","POLICY","REQUEST","CUSTOM_FUNCTION","SelectModel","defaultValue","onChange","target","setItem","disabled","map","defaultProps","log","CodeMirror","defineMode","tokenBase","stream","state","ch","peek","match","sec","skipTo","eat","skipToEnd","after_equal","sol","RegExp","next","comma","dot","startState","tokenize","token","CasbinCodeMirror","useState","modelKind","setValue","useEffect","modelText","onBeforeChange","editor","text","set","options","CustomFunctionEditor","lineNumbers","indentUnit","styleActiveLine","matchBrackets","mode","lineWrapping","theme","ModelEditor","PolicyEditor","RequestEditor","RequestResultEditor","readOnly","Syntax","Config","newConfigFromText","EditorScreen","setModelKind","setModelText","setPolicy","setCustomConfig","setRequest","echo","setEcho","requestResult","setRequestResult","customConfigVisible","setCustomConfigVisible","setTimeout","confirm","hasOwnProperty","index","parseInt","removeItem","reset","location","reload","marginLeft","padding","component","isValidElement","Array","isArray","join","display","App","rel","href","alt","src","color","float","fontSize","Date","getFullYear","rootElement","document","getElementById","ReactDOM","render","Button","styled","button","HeaderTitle","h4","FlexRow","div","EditorContainer","Echo","span","Footer"],"mappings":"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","file":"static/js/main.584dcad6.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { DefaultRoleManager, newEnforcer, newModel, StringAdapter, Util } from 'casbin';\n\ninterface RunTestProps {\n  model: string;\n  modelKind: string;\n  policy: string;\n  customConfig: string;\n  request: string;\n  onResponse: (com: JSX.Element | any[]) => void;\n}\n\nfunction parseABACRequest(line: string): any[] {\n  let value = '';\n  let objectToken = 0;\n  let parseToObject = false;\n  const request = [];\n\n  for (let i = 0; i < line.length; i++) {\n    if (line[i] === ' ') {\n      continue;\n    }\n\n    if (objectToken === 0 && line[i] === ',') {\n      if (parseToObject) {\n        // eslint-disable-next-line\n        value = eval(`(${value})`);\n      }\n      request.push(value);\n\n      value = '';\n      parseToObject = false;\n      continue;\n    }\n\n    value += line[i];\n\n    if (line[i] === '{') {\n      parseToObject = true;\n      objectToken++;\n      continue;\n    }\n\n    if (line[i] === '}') {\n      objectToken--;\n    }\n  }\n\n  if (objectToken !== 0) {\n    throw new Error(`invalid request ${line}`);\n  }\n\n  if (value) {\n    if (parseToObject) {\n      // eslint-disable-next-line\n      value = eval(`(${value})`);\n    }\n    request.push(value);\n  }\n\n  return request;\n}\n\nasync function enforcer(props: RunTestProps) {\n  debugger;\n  const startTime = performance.now();\n  const result = [];\n  try {\n    const e = await newEnforcer(newModel(props.model), props.policy ? new StringAdapter(props.policy) : undefined);\n\n    const customConfigCode = props.customConfig;\n    if (customConfigCode) {\n      try {\n        const builtinFunc = {\n          keyMatch: Util.keyMatchFunc,\n          keyMatch2: Util.keyMatch2Func,\n          keyMatch3: Util.keyMatch3Func,\n          keyMatch4: Util.keyMatch4Func,\n          regexMatch: Util.regexMatchFunc,\n          ipMatch: Util.ipMatchFunc,\n          globMatch: Util.globMatch\n        };\n\n        // eslint-disable-next-line\n        let config = eval(customConfigCode);\n        if (config) {\n          config = { ...config, functions: { ...config.functions, ...builtinFunc } };\n          if (config?.functions) {\n            Object.keys(config.functions).forEach(key => e.addFunction(key, config.functions[key]));\n          }\n\n          const rm = e.getRoleManager() as DefaultRoleManager;\n          const matchingForGFunction = config.matchingForGFunction;\n          if (matchingForGFunction) {\n            if (typeof matchingForGFunction === 'function') {\n              await rm.addMatchingFunc(matchingForGFunction);\n            }\n            if (typeof matchingForGFunction === 'string') {\n              if (matchingForGFunction in config.functions) {\n                console.warn('add matchingForGFunction');\n                await rm.addMatchingFunc(config.functions[matchingForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n\n          const matchingDomainForGFunction = config.matchingDomainForGFunction;\n          if (matchingDomainForGFunction) {\n            if (typeof matchingDomainForGFunction === 'function') {\n              console.warn('add addDomainMatchingFunc');\n              await rm.addDomainMatchingFunc(matchingDomainForGFunction);\n            }\n            if (typeof matchingDomainForGFunction === 'string') {\n              if (matchingDomainForGFunction in config.functions) {\n                console.warn('add addDomainMatchingFunc');\n                await rm.addDomainMatchingFunc(config.functions[matchingDomainForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingDomainForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n        }\n      } catch (e) {\n        props.onResponse(<Echo type={'error'}>Please check syntax in Custom Function Editor: {e.message}</Echo>);\n        return;\n      }\n    }\n\n    const requests = props.request.split('\\n');\n\n    for (const n of requests) {\n      const line = n.trim();\n      if (!line) {\n        result.push('// ignore');\n        continue;\n      }\n\n      if (line[0] === '#') {\n        result.push('// ignore');\n        continue;\n      }\n\n      // const needsAbacParsing = new Set(['abac', 'abac_with_policy_rule']);\n      // const rvals = needsAbacParsing.has(props.modelKind) ? parseABACRequest(n) : n.split(',').map(n => n.trim());\n      const rvals = parseABACRequest(n);\n      result.push(await e.enforce(...rvals));\n    }\n\n    const stopTime = performance.now();\n\n    props.onResponse(<Echo>{'Done in ' + ((stopTime - startTime) / 1000.0).toFixed(2) + 's'}</Echo>);\n    props.onResponse(result);\n  } catch (e) {\n    props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n    props.onResponse([]);\n  }\n}\n\nconst RunTest = (props: RunTestProps) => {\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => enforcer(props)}>\n      RUN THE TEST\n    </Button>\n  );\n};\n\nexport default RunTest;\n","import { defaultCustomConfig, example, ModelKind } from './casbin-mode/example';\n\nexport const DEFAULT_MODEL: ModelKind = 'basic';\n\nexport enum Persist {\n  MODEL,\n  POLICY,\n  REQUEST,\n  CUSTOM_FUNCTION\n}\n\nfunction getKey(persist: Persist, modelName: string) {\n  return `${modelName.toUpperCase()}_${Persist[persist]}`;\n}\n\nexport function getSelectedModel(): ModelKind {\n  const v = window.localStorage.getItem(Persist[Persist.MODEL].toString());\n  return (v ? v : DEFAULT_MODEL) as ModelKind;\n}\n\nexport function setSelectedModel(value: string) {\n  window.localStorage.setItem(Persist[Persist.MODEL], value);\n}\n\nexport function get(persist: Persist, modelName: ModelKind = DEFAULT_MODEL) {\n  const data = window.localStorage.getItem(getKey(persist, modelName));\n\n  if (data) {\n    return data;\n  }\n\n  const m = example[modelName];\n  switch (persist) {\n    case Persist.MODEL:\n      return m.model;\n    case Persist.POLICY:\n      return m.policy;\n    case Persist.REQUEST:\n      return m.request;\n    case Persist.CUSTOM_FUNCTION:\n      return m.customConfig || defaultCustomConfig;\n  }\n}\n\nexport function set(persist: Persist, text: string) {\n  const modelName = getSelectedModel() || DEFAULT_MODEL;\n  window.localStorage.setItem(getKey(persist, modelName), text);\n}\n\nexport function reset(modelName: string) {\n  for (const m in Persist) {\n    if (!Persist.hasOwnProperty(m)) {\n      continue;\n    }\n    const index = parseInt(m, 10);\n    window.localStorage.removeItem(getKey(index, modelName));\n  }\n}\n","export const example = {\n  basic: {\n    name: 'ACL',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_with_root: {\n    name: 'ACL with superuser',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act || r.sub == \"root\"`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_without_resources: {\n    name: 'ACL without resources',\n    model: `[request_definition]\nr = sub, act\n\n[policy_definition]\np = sub, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.act == p.act`,\n    policy: `p, alice, read\np, bob, write`,\n    request: `alice, read`,\n    customConfig: undefined\n  },\n  basic_without_users: {\n    name: 'ACL without users',\n    model: `[request_definition]\nr = obj, act\n\n[policy_definition]\np = obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.obj == p.obj && r.act == p.act`,\n    policy: `p, data1, read\np, data2, write`,\n    request: `data1, read`,\n    customConfig: undefined\n  },\n  rbac: {\n    name: 'RBAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\n\ng, alice, data2_admin`,\n    request: `alice, data2, read`,\n    customConfig: undefined\n  },\n  rbac_with_resource_roles: {\n    name: 'RBAC with resource roles',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\ng2 = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && g2(r.obj, p.obj) && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data_group_admin, data_group, write\n\ng, alice, data_group_admin\ng2, data1, data_group\ng2, data2, data_group`,\n    request: `alice, data1, read\nalice, data1, write\nalice, data2, read\nalice, data2, write `,\n\n    customConfig: undefined\n  },\n  rbac_with_domains: {\n    name: 'RBAC with domains/tenants',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act`,\n    policy: `p, admin, domain1, data1, read\np, admin, domain1, data1, write\np, admin, domain2, data2, read\np, admin, domain2, data2, write\n\ng, alice, admin, domain1\ng, bob, admin, domain2`,\n    request: `alice, domain1, data1, read`,\n    customConfig: undefined\n  },\n  rbac_with_pattern: {\n    name: 'RBAC with pattern',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && regexMatch(r.act, p.act)`,\n    policy: `p, pen_admin, data1, GET\ng, /book/:id, book_admin\n`,\n    request: `/book/1, data1, GET`,\n    customConfig: `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     * See https://casbin.org/docs/en/function#functions-in-matchers for more details.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * See https://casbin.org/docs/en/rbac#use-pattern-matching-in-rbac for more details.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: undefined\n  };\n})();`\n  },\n  rbac_with_all_pattern: {\n    name: 'RBAC with all pattern',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj &&  r.act == p.act`,\n    policy: `p, book_group, domain1, data1, read\np, book_group, domain2, data2, write\n\ng, /book/:id, book_group, *`,\n    request: `/book/1, domain1, data1, read\n/book/1, domain2, data2, write\n`,\n    customConfig: `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: 'keyMatch2'\n  };\n})();`\n  },\n  rbac_with_deny: {\n    name: 'RBAC with deny-override',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, bob, data2, write, allow\np, data2_admin, data2, read, allow\np, data2_admin, data2, write, allow\np, alice, data2, write, deny\n\ng, alice, data2_admin`,\n    request: `alice, data1, read\nalice, data2, write`,\n    customConfig: undefined\n  },\n  abac: {\n    name: 'ABAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == r.obj.Owner`,\n    policy: '',\n    request: `alice, { Owner: 'alice'}\nalice, { Owner: 'bob'}`,\n    customConfig: undefined\n  },\n  abac_with_policy_rule: {\n    name: 'ABAC with policy rule',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub_rule, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = eval(p.sub_rule) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, r.sub.Age > 18 && r.sub.Age < 60, /data1, read\n`,\n    request: `{ Age: 30}, /data1, read`,\n    customConfig: undefined\n  },\n  keymatch: {\n    name: 'RESTful (KeyMatch)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/*, GET\np, alice, /alice_data/resource1, POST\n\np, bob, /alice_data/resource2, GET\np, bob, /bob_data/*, POST\n\np, cathy, /cathy_data, (GET)|(POST)`,\n    request: 'alice, /alice_data/hello, GET',\n    customConfig: undefined\n  },\n  keymatch2: {\n    name: 'RESTful (KeyMatch2)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch2(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/:resource, GET\np, alice, /alice_data2/:id/using/:resId, GET`,\n    request: `alice, /alice_data/hello, GET\nalice, /alice_data/hello, POST`,\n    customConfig: undefined\n  },\n  ipmatch: {\n    name: 'IP match',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = ipMatch(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, 192.168.2.0/24, data1, read\np, 10.0.0.0/16, data2, write`,\n    request: `192.168.2.1, data1, read\n10.0.2.3, data2, write`,\n    customConfig: undefined\n  },\n  priority: {\n    name: 'Priority',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, data1_deny_group, data1, read, deny\np, data1_deny_group, data1, write, deny\np, alice, data1, write, allow\n\ng, alice, data1_deny_group\n\np, data2_allow_group, data2, read, allow\np, bob, data2, read, deny\np, bob, data2, write, deny\n\ng, bob, data2_allow_group`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  }\n};\n\nexport const defaultCustomConfig = `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: undefined,\n    matchingDomainForGFunction: undefined\n  };\n})();`;\nexport type Example = typeof example;\nexport type ModelKind = keyof Example;\n","import React from 'react';\nimport { getSelectedModel, setSelectedModel } from './persist';\nimport { ModelKind, example } from './casbin-mode/example';\n\ninterface SelectModelProps {\n  onChange: (value: string) => void;\n}\n\nconst SelectModel = (props: SelectModelProps) => {\n  return (\n    <select\n      defaultValue={getSelectedModel()}\n      onChange={e => {\n        const model = e.target.value;\n        setSelectedModel(model);\n        props.onChange(model);\n      }}\n    >\n      <option value=\"\" disabled>\n        Select your model\n      </option>\n      {Object.keys(example).map(n => (\n        <option key={n} value={n}>\n          {example[n as ModelKind].name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelectModel.defaultProps = {\n  onChange: console.log,\n  defaultValue: 'basic'\n};\nexport default SelectModel;\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-conf', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n    if (ch === '[') {\n      if (stream.match('[request_definition')) {\n        state.sec = 'r';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_definition')) {\n        state.sec = 'p';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[role_definition')) {\n        state.sec = 'g';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_effect')) {\n        state.sec = 'e';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[matchers')) {\n        state.sec = 'm';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else {\n        state.sec = '';\n        stream.skipToEnd();\n        return '';\n      }\n    } else if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === '\"') {\n      stream.skipToEnd();\n      stream.skipTo('\"');\n      stream.eat('\"');\n      return 'string';\n    } else if (ch === '=') {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = true;\n      stream.eat('=');\n    }\n\n    if (stream.sol()) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = false;\n    }\n\n    if (state.sec === '') {\n      stream.skipToEnd();\n      return '';\n    }\n\n    if (stream.sol()) {\n      if (state.sec !== '') {\n        if ((state.sec === 'g' && stream.match(new RegExp('^g[2-9]?'))) || stream.match(state.sec)) {\n          if (stream.peek() === ' ' || stream.peek() === '=') {\n            return 'builtin';\n          } else {\n            state.sec = '';\n            stream.next();\n            return;\n          }\n        } else {\n          state.sec = '';\n          stream.next();\n          return;\n        }\n      } else {\n        stream.next();\n        return;\n      }\n    }\n\n    if (!state.after_equal) {\n      stream.next();\n      return;\n    }\n\n    if (state.sec === 'r' || state.sec === 'p') {\n      // Match: r = [sub], [obj], [act]\n      //        p = [sub], [obj], [act]\n      if (state.comma) {\n        state.comma = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat(',') || stream.eat(' ')) {\n        state.comma = true;\n        return '';\n      }\n    } else if (state.sec === 'e') {\n      // Match: e = some(where (p.[eft] == allow))\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: e = some(where ([p].eft == allow))\n      if (stream.match('p') && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: e = [some]([where] (p.eft == allow))\n      if (stream.match('some') || stream.match('where') || stream.match('priority')) {\n        return 'keyword';\n      }\n\n      // Match: e = some(where (p.eft == [allow]))\n      if (stream.match('allow') || stream.match('deny')) {\n        return 'string';\n      }\n    } else if (state.sec === 'm') {\n      // Match: m = r.[sub] == p.[sub] && r.[obj] == p.[obj] && r.[act] == p.[act]\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: m = [r].sub == [p].sub && [r].obj == [p].obj && [r].act == [p].act\n      if ((stream.match('r') || stream.match('p')) && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: m = [g](r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n      if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*')) && stream.peek() === '(') {\n        return 'def';\n      }\n    }\n\n    stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-csv', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === ',') {\n      stream.eat(',');\n      return '';\n    }\n\n    if (stream.sol() && stream.match('p')) {\n      return 'def';\n    }\n    if (stream.sol() && (stream.match('g2') || stream.match('g'))) {\n      return 'keyword';\n    }\n\n    if (stream.skipTo(',')) {\n      return 'string';\n    }\n\n    stream.skipToEnd();\n    return 'property';\n\n    // stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","import React, { CSSProperties, useEffect, useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { get, Persist, set } from './persist';\n\nimport * as codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/selection/active-line';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/display/placeholder';\nimport './casbin-mode/casbin-conf';\nimport './casbin-mode/casbin-csv';\nimport { ModelKind } from './casbin-mode/example';\n\ninterface CasbinCodeMirror {\n  modelKind: ModelKind;\n  options: codemirror.EditorConfiguration;\n  style?: CSSProperties;\n  onChange: (text: string) => void;\n  persist: Persist;\n}\n\ninterface EditorProps {\n  modelKind: ModelKind;\n  onChange?: (text: string) => void;\n  style?: CSSProperties;\n}\n\nconst CasbinCodeMirror = (props: CasbinCodeMirror) => {\n  const [value, setValue] = useState(get(props.persist, props.modelKind));\n\n  const { modelKind, onChange, persist } = props;\n\n  useEffect(() => {\n    const modelText = get(persist, modelKind);\n    setValue(modelText);\n    onChange(modelText);\n  }, [modelKind, persist, onChange]);\n\n  return (\n    <div style={props.style}>\n      <CodeMirror\n        onBeforeChange={(editor, data, value) => {\n          setValue(value);\n          props.onChange(value);\n          set(props.persist, value);\n        }}\n        options={props.options}\n        value={value}\n      />\n    </div>\n  );\n};\n\nCasbinCodeMirror.defaultProps = {\n  onChange: () => {}\n};\n\nexport const CustomFunctionEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.CUSTOM_FUNCTION}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'javascript',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const ModelEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.MODEL}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-conf',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const PolicyEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.POLICY}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-csv',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const RequestEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      persist={Persist.REQUEST}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-csv',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\ninterface RequestResultEditorProps {\n  value: string;\n  style?: CSSProperties;\n}\n\nexport const RequestResultEditor = (props: RequestResultEditorProps) => {\n  return (\n    <div style={props.style}>\n      <CodeMirror\n        onBeforeChange={() => {\n          return;\n        }}\n        value={props.value}\n        options={{\n          readOnly: true,\n          indentUnit: 4,\n          styleActiveLine: true,\n          matchBrackets: true,\n          mode: 'javascript',\n          lineWrapping: true,\n          theme: 'monokai'\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { Config } from 'casbin';\n\ninterface SyntaxProps {\n  model: string;\n  onResponse: (com: JSX.Element) => void;\n}\n\nconst Syntax = (props: SyntaxProps) => {\n  return (\n    <Button\n      style={{ marginRight: 8 }}\n      onClick={() => {\n        try {\n          Config.newConfigFromText(props.model);\n          props.onResponse(<Echo>Passed</Echo>);\n        } catch (e) {\n          props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n        }\n      }}\n    >\n      SYNTAX VALIDATE\n    </Button>\n  );\n};\n\nexport default Syntax;\n","import React, { isValidElement, useEffect, useState } from 'react';\nimport SelectModel from './select-model';\nimport { Button, EditorContainer, FlexRow, HeaderTitle } from '../ui';\nimport { getSelectedModel, reset } from './persist';\nimport { CustomFunctionEditor, ModelEditor, PolicyEditor, RequestEditor, RequestResultEditor } from './editor';\nimport Syntax from './syntax';\nimport RunTest from './run-test';\nimport { ModelKind } from './casbin-mode/example';\n\nexport const EditorScreen = () => {\n  const [modelKind, setModelKind] = useState<ModelKind>(getSelectedModel());\n  const [modelText, setModelText] = useState('');\n  const [policy, setPolicy] = useState('');\n  const [customConfig, setCustomConfig] = useState('');\n  const [request, setRequest] = useState('');\n  const [echo, setEcho] = useState<JSX.Element>(<></>);\n  const [requestResult, setRequestResult] = useState('');\n  const [customConfigVisible, setCustomConfigVisible] = useState(true);\n\n  useEffect(() => {\n    if (modelKind === 'rbac_with_pattern' || modelKind === 'rbac_with_all_pattern') {\n      setCustomConfigVisible(true);\n      return;\n    }\n    // Automatically hide the custom config container.\n    setTimeout(() => {\n      setCustomConfigVisible(false);\n    }, 2000);\n  }, [modelKind]);\n\n  return (\n    <>\n      <FlexRow>\n        <EditorContainer>\n          <FlexRow>\n            <HeaderTitle>Model</HeaderTitle>\n            <SelectModel\n              onChange={value => {\n                setModelKind(value as ModelKind);\n              }}\n            />\n            <Button\n              onClick={() => {\n                const ok = window.confirm('Confirm Reset?');\n                if (ok) {\n                  reset(modelKind);\n                  window.location.reload();\n                }\n              }}\n              style={{ marginLeft: 8 }}\n            >\n              Reset\n            </Button>\n          </FlexRow>\n          <ModelEditor modelKind={modelKind} onChange={setModelText} />\n        </EditorContainer>\n        <EditorContainer>\n          <HeaderTitle>Policy</HeaderTitle>\n          <PolicyEditor modelKind={modelKind} onChange={setPolicy} />\n        </EditorContainer>\n      </FlexRow>\n\n      <FlexRow>\n        <EditorContainer>\n          <HeaderTitle>Request</HeaderTitle>\n          <RequestEditor modelKind={modelKind} onChange={setRequest} />\n        </EditorContainer>\n        <EditorContainer>\n          <HeaderTitle>Enforcement Result</HeaderTitle>\n          <RequestResultEditor value={requestResult} />\n        </EditorContainer>\n      </FlexRow>\n\n      <FlexRow>\n        <EditorContainer>\n          <FlexRow>\n            <HeaderTitle>Custom Config</HeaderTitle>\n            <Button onClick={() => setCustomConfigVisible(!customConfigVisible)}>TOGGLE</Button>\n          </FlexRow>\n          {customConfigVisible && <CustomFunctionEditor modelKind={modelKind} onChange={setCustomConfig} />}\n        </EditorContainer>\n      </FlexRow>\n\n      <div style={{ padding: 8 }}>\n        <Syntax model={modelText} onResponse={component => setEcho(component)} />\n        <RunTest\n          modelKind={modelKind}\n          model={modelText}\n          policy={policy}\n          customConfig={customConfig}\n          request={request}\n          onResponse={v => {\n            if (isValidElement(v)) {\n              setEcho(v);\n            } else if (Array.isArray(v)) {\n              setRequestResult(v.join('\\n'));\n            }\n          }}\n        />\n        <div style={{ display: 'inline-block' }}>{echo}</div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorScreen } from './editor';\nimport { Footer } from './ui';\nimport 'normalize.css/normalize.css';\n\nconst App = () => (\n  <>\n    <EditorScreen />\n\n    <Footer>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/casbin/casbin-editor\">\n        <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/casbin/casbin-editor?style=social\" />\n      </a>\n      <span style={{ color: '#FFFFFF', float: 'right', fontSize: 14 }}>Copyright © {new Date().getFullYear()} Casbin contributors.</span>\n    </Footer>\n  </>\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: 1px solid #443d80;\n  border-radius: 3px;\n  color: #443d80;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2em;\n  padding: 10px;\n  text-decoration: none !important;\n  text-transform: uppercase;\n  transition: background 0.3s, color 0.3s;\n\n  :hover {\n    background: #443d80;\n    color: #fff;\n  }\n`;\n\nexport const HeaderTitle = styled.h4`\n  padding: 8px;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const EditorContainer = styled.div`\n  flex: 1;\n`;\n\ninterface EchoProps {\n  type?: 'pass' | 'error';\n}\n\nconst error = '#db4545';\nconst pass = '#39aa56';\n\nexport const Echo = styled.span<EchoProps>`\n  color: ${(props: EchoProps) => {\n    switch (props.type) {\n      case 'error':\n        return error;\n      case 'pass':\n        return pass;\n    }\n  }};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nEcho.defaultProps = {\n  type: 'pass'\n};\n\nexport const Footer = styled.div`\n  padding: 1em;\n  background: #222;\n`;\n"],"sourceRoot":""}